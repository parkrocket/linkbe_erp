name: Deploy Node.js App to EC2

on:
  push:
    paths:
      - 'nodejs-server/**'
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: cd nodejs-server && npm install

    - name: Create .ssh directory
      run: |
        mkdir -p ~/.ssh

    - name: Add known_hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USERNAME: ${{ secrets.EC2_USER }}
        KEY: ${{ secrets.EC2_KEY }}
        PORT: ${{ secrets.EC2_PORT }}
        NODE_ENV: production
      run: |
        echo "${KEY}" > key.pem
        chmod 400 key.pem
        rsync -avz --exclude 'node_modules' -e "ssh -o StrictHostKeyChecking=no -i key.pem" nodejs-server/ $USERNAME@$HOST:/home/ubuntu/nodejs-server/
        ssh -o StrictHostKeyChecking=no -i key.pem $USERNAME@$HOST "
          cd /home/ubuntu/nodejs-server &&
          echo '${{ secrets.ENV_FILE_CONTENTS }}' > .env &&
          echo '${{ secrets.ENV_PRODUCTION_FILE_CONTENTS }}' > .env.production &&
          npm install &&
          npm install --only=prod &&
          if [ $? -eq 0 ]; then
            NODE_ENV=production pm2 restart nodejs-server || NODE_ENV=production pm2 start src/index.js --name nodejs-server;
          else
            echo 'npm install failed';
            exit 1;
          fi"
        rm key.pem
